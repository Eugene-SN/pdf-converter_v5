[2025-09-27T21:46:00.148+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: quality_assurance.finalize_qa_process manual__2025-09-27T21:43:07.574980+00:00 [queued]>
[2025-09-27T21:46:00.154+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: quality_assurance.finalize_qa_process manual__2025-09-27T21:43:07.574980+00:00 [queued]>
[2025-09-27T21:46:00.154+0000] {taskinstance.py:2170} INFO - Starting attempt 1 of 2
[2025-09-27T21:46:00.161+0000] {taskinstance.py:2191} INFO - Executing <Task(PythonOperator): finalize_qa_process> on 2025-09-27 21:43:07.574980+00:00
[2025-09-27T21:46:00.167+0000] {standard_task_runner.py:60} INFO - Started process 539 to run task
[2025-09-27T21:46:00.169+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'quality_assurance', 'finalize_qa_process', 'manual__2025-09-27T21:43:07.574980+00:00', '--job-id', '932', '--raw', '--subdir', 'DAGS_FOLDER/quality_assurance.py', '--cfg-path', '/tmp/tmpek49aia9']
[2025-09-27T21:46:00.171+0000] {standard_task_runner.py:88} INFO - Job 932: Subtask finalize_qa_process
[2025-09-27T21:46:00.211+0000] {task_command.py:423} INFO - Running <TaskInstance: quality_assurance.finalize_qa_process manual__2025-09-27T21:43:07.574980+00:00 [running]> on host 5135eb910334
[2025-09-27T21:46:00.399+0000] {taskinstance.py:2480} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='pdf-converter' AIRFLOW_CTX_DAG_ID='quality_assurance' AIRFLOW_CTX_TASK_ID='finalize_qa_process' AIRFLOW_CTX_EXECUTION_DATE='2025-09-27T21:43:07.574980+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-09-27T21:43:07.574980+00:00'
[2025-09-27T21:46:00.421+0000] {quality_assurance.py:1259} INFO - 🎯 Полный 5-уровневый QA завершен: 89.3% - ✅ КАЧЕСТВО ПРОШЛО 5-УРОВНЕВУЮ ВАЛИДАЦИЮ
[2025-09-27T21:46:00.421+0000] {python.py:201} INFO - Done. Returned value was: {'qa_completed': True, 'enterprise_validation': True, 'quality_score': 89.3, 'quality_passed': True, 'final_document': '/app/output/zh/1759009195_test_short.md', 'final_content': '# upload_1759009200_test_short\n\n## 命令列表\n\n| Command Name                                  | NetFn   | CMD   | Privilege   | 备注                                                                     |\n|-----------------------------------------------|---------|-------|-------------|--------------------------------------------------------------------------|\n| chassis status                                |         |       | User        | 获取当前服务器 (Server) 状态                                                   |\n| chassis restart_cause                         |         |       | User        | 获取服务器 (Server) 系统上次重启原因                                           |\n| chassis selftest                              |         |       | User        | 获取服务器 (Server) 系统自检结果                                               |\n| chassis policy always-on/previous/always-off  |         |       | operator    | 设置服务器 (Server) 系统电源 (Power Supply) 恢复策略为自动开机 / 恢复到断电前状态 / 保持关机状态 |\n| chassis bootdev {device}                      |         |       | operator    | 设置服务器 (Server) 的启动项                                                   |\n| power status                                  |         |       | User        | 获取服务器 (Server) 系统电源 (Power Supply) 当前状态                               |\n| power on/up                                   |         |       | operator    | 设置服务器 (Server) 开机                                                       |\n| power off/down                                |         |       | operator    | 设置服务器 (Server) 关机                                                       |\n| power reset                                   |         |       | operator    | 设置服务器 (Server) 重启                                                       |\n| mc info                                       |         |       | User        | 获取服务器 (Server) 管理系统各个模块信息                                       |\n| mc selftest                                   |         |       | User        | 获取服务器 (Server) 管理系统自检结果                                           |\n| mc reset cold                                 |         |       | Admin       | 设置服务器 (Server) 管理系统冷重启                                             |\n| sdr                                           |         |       | User        | 获取服务器 (Server) 所有传感器的部分信息                                         |\n| sensor list                                   |         |       | User        | 获取服务器 (Server) 所有传感器的详细参数信息                                     |\n| sensor get {sensor-name}                      |         |       | User        | 获取服务器 (Server) 指定传感器的详细信息                                         |\n| sensor thresh {sensor-name}                   |         |       | Admin       | 设置服务器 (Server) 指定传感器的阈值                                             |\n| sel                                           |         |       | User        | 获取系统日志信息                                                             |\n| sel elist                                     |         |       | User        | 获取系统详细日志记录                                                         |\n| fru                                           |         |       | User        | 获取现场可替换单元信息                                                       |\n| session info active                           |         |       | User        | 获取服务器 (Server) 管理系统当前活跃用户的会话信息                               |\n| User list                                     |         |       | User        | 获取所有用户信息                                                             |\n| User set name {User id} {Username}            |         |       | Admin       | 设置服务器 (Server) 管理系统新增用户名                                           |\n| User set password {User id} {password}        |         |       | Admin       | 设置服务器 (Server) 管理系统指定用户的密码                                       |\n| User test {User id} {16|20} {password}        |         |       | Admin       | 验证用户名密码的正确性                                                       |\n| User disable {User id}                        |         |       | Admin       | 关闭指定用户的服务器 (Server) 管理系统的访问权限                                 |\n| User enable {User id}                         |         |       | Admin       | 开启指定用户的服务器 (Server) 管理系统的访问权限                                 |\n| User priv {User id} {privilege level}         |         |       | Admin       | 设置指定用户的服务器 (Server) 管理系统访问权限                                   |\n\n## 用户权限管理\n\n### 用户权限操作命令\n\n| **命令**               | **权限级别** | **操作描述**                                                                 |\n|------------------------|--------------|------------------------------------------------------------------------------|\n| User disable {User id} | Admin        | 关闭指定用户的服务器 (Server)管理系统的访问权限                                 |\n| User enable {User id}  | Admin        | 开启指定用户的服务器 (Server)管理系统的访问权限                                 |\n| User priv {User id} {privilege level} | Admin        | 设置指定用户的服务器 (Server)管理系统访问权限                           |\n\n---\n\n## chassis selftest（获取服务器 (Server)系统自检结果）\n\n### 命令描述\n\n`chassis selftest` 命令用于获取服务器 (Server) 系统自检结果。\n\n| **属性**       | **说明**                                                                 |\n|----------------|--------------------------------------------------------------------------|\n| **权限级别**   | user                                                                     |\n| **命令示例**   | ```bash lenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus chassis selftest Self Test Results : passed ``` |\n\n---\n\n## chassis policy always-on/previous/always-off（设置服务器 (Server)系统电源 (Power Supply)恢复策略）\n\n### 命令描述\n\n`chassis policy` 命令用于设置服务器 (Server) 系统电源 (Power Supply) 恢复策略。支持以下三种策略：\n\n1. **always-on**：当服务器 (Server) 电源 (Power Supply) 接通后，系统会自动启动。\n2. **previous**：当服务器 (Server) 电源 (Power Supply) 接通后，系统恢复至电源 (Power Supply) 拔出前的状态。\n3. **always-off**：当服务器 (Server) 电源 (Power Supply) 接通后，系统保持关机状态。\n\n| **属性**       | **说明**                                                                 |\n|----------------|--------------------------------------------------------------------------|\n| **权限级别**   | operator                                                                |\n| **命令示例**   | ```bash lenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus chassis policy state <state>: list : return supported policies ``` |\n\n---\n\n## chassis bootdev {device} （设置服务器 (Server) 的启动项）\n\n### 命令描述\n\n`chassis bootdev` 命令用来设置服务器 (Server) 系统一次性启动选项。\n\n| **属性**       | **说明**                                                                 |\n|----------------|--------------------------------------------------------------------------|\n| **权限级别**   | operator                                                                |\n| **命令示例**   | ```bash lenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus chassis bootdev {device} ``` |\n\n---\n\n## sol activate （激活 SOL 功能）\n\n### 命令描述\n\n`sol activate` 命令用来激活 SOL 功能。\n\n| **属性**       | **说明**                                                                 |\n|----------------|--------------------------------------------------------------------------|\n| **权限级别**   | administrator                                                           |\n| **命令示例**   | ```bash lenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus sol activate usesolkeepalive [SOL Session operational. Use ~? for help] ``` |\n\n---\n\n## SNMP Trap 配置命令\n\n### SET SNMPTRAPINFO (netfn=`0x30`, cmd=`0x03`)\n\n#### 参数定义\n\n| **参数值**     | **描述**                                                                 |\n|----------------|--------------------------------------------------------------------------|\n| `01h`          | 使能状态 (`00h` - 禁用, `01h` - 启用)                                     |\n| `02h`          | 严重性 (`01h` - 严重, `02h` - 严重和警告, `03h` - 全部)               |\n| `03h`          | 版本 (`01h` - v1, `02h` - v2c, `03h` - v3)                               |\n| `04h`          | 模式 (具体值取决于实现)                                                 |\n| `05h`          | 社区字符串 (长度: 17 字节)                                              |\n| `06h`          | 用户名 (长度: 17 字节)                                                  |\n| `07h`          | 用户加密状态 (`00h` - 加密, `01h` - 非加密)                             |\n| `08h`          | 密码 (长度: 17 字节)                                                    |\n| `09h`          | 密码加密状态 (`00h` - 加密, `01h` - 非加密)                             |\n| `0Ah`          | 目标 IP 地址 (长度: 33 字节)                                            |\n| `0Bh`          | 端口号 (长度: 3 字节)                                                   |\n| `0Ch`          | LAN 通道 (长度: 2 字节)                                                 |\n| `0Dh`          | 进入 ID (长度: 33 字节)                                                 |\n\n#### 响应数据格式\n\n| **参数值**     | **字节** | **数据字段**                                                                 |\n|----------------|----------|-----------------------------------------------------------------------------|\n| `01h`          | 1        | 完成码 (`00h` - 成功, 其他值表示错误)                                     |\n| `01h`          | 2        | 使能状态 (`00h` - 禁用, `01h` - 启用)                                     |\n| `02h`          | 1        | 完成码 (`00h` - 成功, 其他值表示错误)                                     |\n| `02h`          | 2        | 严重性 (`01h` - 严重, `02h` - 严重和警告, `03h` - 全部)                 |\n| `03h`          | 1        | 完成码 (`00h` - 成功, 其他值表示错误)                                     |\n| `03h`          | 2        | 版本 (`01h` - v1, `02h` - v2c, `03h` - v3)                                 |\n| `04h`          | 1        | 完成码 (`00h` - 成功, 其他值表示错误)                                     |\n| `04h`          | 2        | 模式 (具体值取决于实现)                                                   |\n| `05h`          | 1        | 完成码 (`00h` - 成功, 其他值表示错误)                                     |\n| `05h`          | 2:17     | 社区字符串 (长度: 17 字节)                                                |\n| `06h`          | 1        | 完成码 (`00h` - 成功, 其他值表示错误)                                     |\n| `06h`          | 2:17     | 用户名 (长度: 17 字节)                                                    |\n| `07h`          | 1        | 完成码 (`00h` - 成功, 其他值表示错误)                                     |\n| `07h`          | 2        | 用户加密状态 (`00h` - 加密, `01h` - 非加密)                               |\n| `08h`          | 1        | 完成码 (`00h` - 成功, 其他值表示错误)                                     |\n| `08h`          | 2:17     | 密码 (长度: 17 字节)                                                     |\n| `09h`          | 1        | 完成码 (`00h` - 成功, 其他值表示错误)                                     |\n| `09h`          | 2        | 密码加密状态 (`00h` - 加密, `01h` - 非加密)                               |\n| `0Ah`          | 1        | 完成码 (`00h` - 成功, 其他值表示错误)                                     |\n| `0Ah`          | 2:33     | 目标 IP 地址 (长度: 33 字节)                                              |\n| `0Bh`          | 1        | 完成码 (`00h` - 成功, 其他值表示错误)                                     |\n| `0Bh`          | 2:3      | 端口号 (长度: 3 字节)                                                     |\n| `0Ch`          | 1        | 完成码 (`00h` - 成功, 其他值表示错误)                                     |\n| `0Ch`          | 2        | LAN 通道 (长度: 2 字节)                                                   |\n| `0Dh`          | 1        | 完成码 (`00h` - 成功, 其他值表示错误)                                     |\n| `0Dh`          | 2:33     | 进入 ID (长度: 33 字节)                                                   |\n\n#### 命令示例\n\n```bash\n# ipmitool -H 10.109.107.160 -U USERID -P PASSW0RD raw 0x30 0x02 01\n```\n\n#### 备注\n\n- 该命令用于获取或设置 SNMP Trap 相关配置信息。\n- 参数值的具体含义请参考上表。\n- 完成码 (`00h`) 表示命令执行成功，其他值表示错误，需根据具体错误码进行排查。', 'qa_report': '/opt/***/temp/qa_comprehensive_report_qa_full_1759009388.json', 'issues_count': 4, 'corrections_applied': 2, 'pipeline_ready': True, '5_level_validation_complete': True, 'level_scores': {'level_1': 0.9900000000000001, 'level_2': 0.7, 'level_3': 0.8999999999999999, 'level_4': 0.875, 'level_5': 1.0}, 'pdf_comparison_performed': True, 'ocr_validation_performed': True, 'semantic_analysis_performed': True, 'auto_correction_performed': True}
[2025-09-27T21:46:00.441+0000] {taskinstance.py:1138} INFO - Marking task as SUCCESS. dag_id=quality_assurance, task_id=finalize_qa_process, execution_date=20250927T214307, start_date=20250927T214600, end_date=20250927T214600
[2025-09-27T21:46:00.461+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 0
[2025-09-27T21:46:00.479+0000] {taskinstance.py:3280} INFO - 1 downstream tasks scheduled from follow-on schedule check
