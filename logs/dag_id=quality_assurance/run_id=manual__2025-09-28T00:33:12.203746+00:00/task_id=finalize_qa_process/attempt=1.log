[2025-09-28T00:39:25.403+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: quality_assurance.finalize_qa_process manual__2025-09-28T00:33:12.203746+00:00 [queued]>
[2025-09-28T00:39:25.409+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: quality_assurance.finalize_qa_process manual__2025-09-28T00:33:12.203746+00:00 [queued]>
[2025-09-28T00:39:25.409+0000] {taskinstance.py:2170} INFO - Starting attempt 1 of 2
[2025-09-28T00:39:25.417+0000] {taskinstance.py:2191} INFO - Executing <Task(PythonOperator): finalize_qa_process> on 2025-09-28 00:33:12.203746+00:00
[2025-09-28T00:39:25.423+0000] {standard_task_runner.py:60} INFO - Started process 328 to run task
[2025-09-28T00:39:25.425+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'quality_assurance', 'finalize_qa_process', 'manual__2025-09-28T00:33:12.203746+00:00', '--job-id', '965', '--raw', '--subdir', 'DAGS_FOLDER/quality_assurance.py', '--cfg-path', '/tmp/tmp68nvpi7k']
[2025-09-28T00:39:25.427+0000] {standard_task_runner.py:88} INFO - Job 965: Subtask finalize_qa_process
[2025-09-28T00:39:25.467+0000] {task_command.py:423} INFO - Running <TaskInstance: quality_assurance.finalize_qa_process manual__2025-09-28T00:33:12.203746+00:00 [running]> on host 64801ed803bd
[2025-09-28T00:39:25.664+0000] {taskinstance.py:2480} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='pdf-converter' AIRFLOW_CTX_DAG_ID='quality_assurance' AIRFLOW_CTX_TASK_ID='finalize_qa_process' AIRFLOW_CTX_EXECUTION_DATE='2025-09-28T00:33:12.203746+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-09-28T00:33:12.203746+00:00'
[2025-09-28T00:39:25.685+0000] {quality_assurance.py:1259} INFO - üéØ –ü–æ–ª–Ω—ã–π 5-—É—Ä–æ–≤–Ω–µ–≤—ã–π QA –∑–∞–≤–µ—Ä—à–µ–Ω: 81.0% - ‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´
[2025-09-28T00:39:25.685+0000] {python.py:201} INFO - Done. Returned value was: {'qa_completed': True, 'enterprise_validation': True, 'quality_score': 81.05, 'quality_passed': False, 'final_document': '/app/output/zh/1759019430_test_short.md', 'final_content': "# upload_1759019435_test_short\n\n## Overview\n\nThis document provides a comprehensive guide to various IPMI (Intelligent Platform Management Interface) commands and their usage for managing server systems. It covers command descriptions, privilege levels, examples, and detailed data formats for specific commands.\n\n## Command List\n\nThe following table lists the IPMI commands, their NetFN (Network Function), command codes, required privilege levels, and brief descriptions:\n\n| **Command Name**                                      | **NetFN** | **CMD** | **Privilege** | **Description**                                                                 |\n|-------------------------------------------------------|-----------|---------|---------------|---------------------------------------------------------------------------------|\n| `chassis status`                                      |           |         | User          | Retrieves the current status of the server.                                      |\n| `chassis restart_cause`                               |           |         | User          | Retrieves the reason for the last system restart.                                |\n| `chassis selftest`                                    |           |         | User          | Retrieves the results of the system self-test.                                   |\n| `chassis policy always-on/previous/always-off`        |           |         | Operator      | Sets the power recovery policy for the server.                                  |\n| `chassis bootdev {device}`                            |           |         | Operator      | Sets the one-time boot device for the server.                                    |\n| `power status`                                        |           |         | User          | Retrieves the current power status of the server.                                |\n| `power on/up`                                         |           |         | Operator      | Powers on the server.                                                           |\n| `power off/down`                                      |           |         | Operator      | Powers off the server.                                                          |\n| `power reset`                                         |           |         | Operator      | Resets the server.                                                             |\n| `mc info`                                             |           |         | User          | Retrieves information about the management controller modules.                  |\n| `mc selftest`                                         |           |         | User          | Retrieves the results of the management controller self-test.                    |\n| `mc reset cold`                                       |           |         | Admin         | Performs a cold reset of the management controller.                              |\n| `sdr`                                                 |           |         | User          | Retrieves partial information about all sensors.                                |\n| `sensor list`                                         |           |         | User          | Retrieves detailed parameters for all sensors.                                  |\n| `sensor get {sensor-name}`                            |           |         | User          | Retrieves detailed information for a specific sensor.                            |\n| `sensor thresh {sensor-name}`                         |           |         | Admin         | Sets the threshold for a specific sensor.                                        |\n| `sel`                                                 |           |         | User          | Retrieves system event log (SEL) information.                                   |\n| `sel elist`                                           |           |         | User          | Retrieves detailed SEL records.                                                 |\n| `fru`                                                 |           |         | User          | Retrieves field replaceable unit (FRU) information.                              |\n| `session info active`                                 |           |         | User          | Retrieves information about active user sessions.                                |\n| `User list`                                           |           |         | User          | Retrieves information about all users.                                          |\n| `User set name {User id} {Username}`                  |           |         | Admin         | Sets the username for a user.                                                   |\n| `User set password {User id} {password}`              |           |         | Admin         | Sets the password for a user.                                                   |\n| `User test {User id} {16|20} {password}`              |           |         | Admin         | Validates the username and password.                                           |\n| `User disable {User id}`                              |           |         | Admin         | Disables a user's access to the management system.                               |\n| `User enable {User id}`                               |           |         | Admin         | Enables a user's access to the management system.                                |\n| `User priv {User id} {privilege level}`               |           |         | Admin         | Sets the privilege level for a user.                                            |\n\n### Example Usage\n\n```bash\nlenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus chassis selftest\nSelf Test Results : passed\n```\n\n## Chassis Power Recovery Policy\n\n### Description\n\nThe `chassis policy` command is used to set the power recovery policy for the server. It supports three policies:\n\n1. **always-on**: The system automatically boots when power is restored.\n2. **previous**: The system resumes to the state before power was lost.\n3. **always-off**: The system remains powered off when power is restored.\n\n### Privilege Level\n\n| **Privilege Level** | **Operator** |\n|---------------------|--------------|\n\n### Command Examples\n\n#### List Supported Policies\n\n```bash\nlenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus chassis policy state list\n```\n\n#### Set Power Recovery Policy\n\n```bash\nlenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus chassis policy state <state>\n```\n\n## Chassis Boot Device\n\n### Description\n\nThe `chassis bootdev` command is used to set the one-time boot device for the server.\n\n### Privilege Level\n\n| **Privilege Level** | **Operator** |\n|---------------------|--------------|\n\n## SOL (Serial Over LAN) Activation\n\n### Description\n\nThe `sol activate` command is used to activate the SOL (Serial Over LAN) functionality.\n\n### Privilege Level\n\n| **Privilege Level** | **Administrator** |\n|---------------------|-------------------|\n\n### Command Example\n\n```bash\nlenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus sol activate usesolkeepalive\n[SOL Session operational. Use ~? for help]\n```\n\n### Request Data Format\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | User ID (Value range: `01h` to `05h`)                                          |\n| **2**    | Parameter: <br> `01h` - enable <br> `02h` - severity <br> `03h` - version <br> `04h` - mode <br> `05h` - community <br> `06h` - user <br> `07h` - user encrypt <br> `08h` - password <br> `09h` - pass encrypt <br> `0Ah` - destination IP <br> `0Bh` - port <br> `0Ch` - lan channel <br> `0Dh` - enter ID |\n\n### Response Data Format\n\n#### Parameter `01h` (Enable/Disable)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2**    | `00h` - disable <br> `01h` - enable                                            |\n\n#### Parameter `02h` (Severity)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2**    | `01h` - critical <br> `02h` - critical and warning <br> `03h` - all            |\n\n#### Parameter `03h` (Version)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2**    | `01h` - v1 <br> `02h` - v2c <br> `03h` - v3                                    |\n\n#### Parameter `04h` (Mode)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2**    | Mode value                                                                     |\n\n#### Parameter `05h` (Community)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2:17** | Community string                                                               |\n\n#### Parameter `06h` (User)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2:17** | User string                                                                    |\n\n#### Parameter `07h` (User Encrypt)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2**    | `00h` - user encrypt <br> `01h` - user non-encrypt                              |\n\n#### Parameter `08h` (Password)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2:17** | Password string                                                                |\n\n#### Parameter `09h` (Password Encrypt)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2**    | `00h` - password encrypt <br> `01h` - password non-encrypt                      |\n\n#### Parameter `0Ah` (Destination IP)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2:33** | Destination IP address                                                         |\n\n#### Parameter `0Bh` (Port)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2:3**  | Port number                                                                   |\n\n#### Parameter `0Ch` (LAN Channel)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2**    | LAN channel                                                                    |\n\n#### Parameter `0Dh` (Enter ID)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2:33** | Enter ID                                                                       |\n\n### Command Example\n\n```bash\n# ipmitool -H 10.109.107.160 -U USERID -P PASSW0RD\n```\n\n## SNMP Trap Information (netfn=`0x30`, cmd=`0x03`)\n\n### Request Data Format\n\n| **Byte** | **Data Field**                                                                                                                                         |\n|----------|--------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **1**    | **User ID**: This value ranges from `01h` to `05h`.                                                                                                   |\n| **2**    | **Parameter** (Values for different parameters):<br>`01h` - Enable<br>`02h` - Severity<br>`03h` - Version<br>`04h` - Mode<br>`05h` - Community<br>`06h` - User<br>`07h` - User Encrypt<br>`08h` - Password<br>`09h` - Pass Encrypt<br>`0Ah` - Destination IP<br>`0Bh` - Port<br>`0Ch` - LAN Channel<br>`0Dh` - Enter ID |\n| **3**    | **Below Value for Parameter `01h`**: <br>`00h` - Disable<br>`01h` - Enable<br><br>**Below Value for Parameter `02h`**: <br>`01h` - Critical<br>`02h` - Critical and Warning<br>`03h` - All<br><br>**Below Value for Parameter `03h`**: (To be continued) |\n\n### Response Data Format\n\n#### Parameter `01h` (Enable/Disable)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2**    | `00h` - disable <br> `01h` - enable                                            |\n\n#### Parameter `02h` (Severity)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2**    | `01h` - critical <br> `02h` - critical and warning <br> `03h` - all            |\n\n#### Parameter `03h` (Version)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2**    | `01h` - v1 <br> `02h` - v2c <br> `03h` - v3                                    |\n\n#### Parameter `04h` (Mode)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2**    | Mode value                                                                     |\n\n#### Parameter `05h` (Community)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2:17** | Community string                                                               |\n\n#### Parameter `06h` (User)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2:17** | User string                                                                    |\n\n#### Parameter `07h` (User Encrypt)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2**    | `00h` - user encrypt <br> `01h` - user non-encrypt                              |\n\n#### Parameter `08h` (Password)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2:17** | Password string                                                                |\n\n#### Parameter `09h` (Password Encrypt)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2**    | `00h` - password encrypt <br> `01h` - password non-encrypt                      |\n\n#### Parameter `0Ah` (Destination IP)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2:33** | Destination IP address                                                         |\n\n#### Parameter `0Bh` (Port)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2:3**  | Port number                                                                   |\n\n#### Parameter `0Ch` (LAN Channel)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2**    | LAN channel                                                                    |\n\n#### Parameter `0Dh` (Enter ID)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2:33** | Enter ID                                                                       |\n\n### Command Example\n\n```bash\n# ipmitool -H 10.109.107.160 -U USERID -P PASSW0RD\n```", 'qa_report': '/opt/***/temp/qa_comprehensive_report_qa_full_1759019594.json', 'issues_count': 6, 'corrections_applied': 3, 'pipeline_ready': False, '5_level_validation_complete': True, 'level_scores': {'level_1': 0.9900000000000001, 'level_2': 0.7, 'level_3': 0.8, 'level_4': 0.8625, 'level_5': 0.7000000000000001}, 'pdf_comparison_performed': True, 'ocr_validation_performed': True, 'semantic_analysis_performed': True, 'auto_correction_performed': True}
[2025-09-28T00:39:25.705+0000] {taskinstance.py:1138} INFO - Marking task as SUCCESS. dag_id=quality_assurance, task_id=finalize_qa_process, execution_date=20250928T003312, start_date=20250928T003925, end_date=20250928T003925
[2025-09-28T00:39:25.757+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 0
[2025-09-28T00:39:25.775+0000] {taskinstance.py:3280} INFO - 1 downstream tasks scheduled from follow-on schedule check
