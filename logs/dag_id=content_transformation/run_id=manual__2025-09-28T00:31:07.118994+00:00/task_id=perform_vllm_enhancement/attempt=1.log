[2025-09-28T00:31:09.842+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: content_transformation.perform_vllm_enhancement manual__2025-09-28T00:31:07.118994+00:00 [queued]>
[2025-09-28T00:31:09.847+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: content_transformation.perform_vllm_enhancement manual__2025-09-28T00:31:07.118994+00:00 [queued]>
[2025-09-28T00:31:09.847+0000] {taskinstance.py:2170} INFO - Starting attempt 1 of 3
[2025-09-28T00:31:09.855+0000] {taskinstance.py:2191} INFO - Executing <Task(PythonOperator): perform_vllm_enhancement> on 2025-09-28 00:31:07.118994+00:00
[2025-09-28T00:31:09.860+0000] {standard_task_runner.py:60} INFO - Started process 172 to run task
[2025-09-28T00:31:09.862+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'content_transformation', 'perform_vllm_enhancement', 'manual__2025-09-28T00:31:07.118994+00:00', '--job-id', '949', '--raw', '--subdir', 'DAGS_FOLDER/content_transformation.py', '--cfg-path', '/tmp/tmp8om7c_ru']
[2025-09-28T00:31:09.863+0000] {standard_task_runner.py:88} INFO - Job 949: Subtask perform_vllm_enhancement
[2025-09-28T00:31:09.906+0000] {task_command.py:423} INFO - Running <TaskInstance: content_transformation.perform_vllm_enhancement manual__2025-09-28T00:31:07.118994+00:00 [running]> on host 64801ed803bd
[2025-09-28T00:31:09.970+0000] {taskinstance.py:2480} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='pdf-converter' AIRFLOW_CTX_DAG_ID='content_transformation' AIRFLOW_CTX_TASK_ID='perform_vllm_enhancement' AIRFLOW_CTX_EXECUTION_DATE='2025-09-28T00:31:07.118994+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-09-28T00:31:07.118994+00:00'
[2025-09-28T00:31:10.006+0000] {content_transformation.py:434} INFO - 🤖 Начало vLLM интеллектуального улучшения
[2025-09-28T00:31:10.006+0000] {content_transformation.py:459} INFO - 📊 Выполнение интеллектуального чанкования
[2025-09-28T00:31:10.006+0000] {content_transformation.py:728} INFO - 📊 Выполнение интеллектуального чанкования
[2025-09-28T00:31:10.006+0000] {content_transformation.py:759} INFO - ✅ Создано 6 чанков для обработки
[2025-09-28T00:31:10.006+0000] {content_transformation.py:466} INFO - 🚀 Обработка 5 чанков через vLLM
[2025-09-28T00:31:10.006+0000] {content_transformation.py:473} INFO - 🧵 Параллельная обработка чанков (2 потоков)
[2025-09-28T00:31:10.007+0000] {content_transformation.py:769} INFO - 🤖 vLLM обработка чанка 1/5
[2025-09-28T00:31:10.007+0000] {content_transformation.py:769} INFO - 🤖 vLLM обработка чанка 2/5
[2025-09-28T00:31:10.008+0000] {content_transformation.py:852} INFO - vLLM API вызов (попытка 1)
[2025-09-28T00:31:10.008+0000] {content_transformation.py:852} INFO - vLLM API вызов (попытка 1)
[2025-09-28T00:31:41.767+0000] {content_transformation.py:872} INFO - ✅ vLLM API успешен
[2025-09-28T00:31:41.767+0000] {content_transformation.py:773} INFO - ✅ Чанк 2 улучшен
[2025-09-28T00:31:41.768+0000] {content_transformation.py:769} INFO - 🤖 vLLM обработка чанка 3/5
[2025-09-28T00:31:41.768+0000] {content_transformation.py:852} INFO - vLLM API вызов (попытка 1)
[2025-09-28T00:31:54.186+0000] {content_transformation.py:872} INFO - ✅ vLLM API успешен
[2025-09-28T00:31:54.186+0000] {content_transformation.py:773} INFO - ✅ Чанк 3 улучшен
[2025-09-28T00:31:54.186+0000] {content_transformation.py:769} INFO - 🤖 vLLM обработка чанка 4/5
[2025-09-28T00:31:54.187+0000] {content_transformation.py:852} INFO - vLLM API вызов (попытка 1)
[2025-09-28T00:31:55.509+0000] {content_transformation.py:872} INFO - ✅ vLLM API успешен
[2025-09-28T00:31:55.509+0000] {content_transformation.py:773} INFO - ✅ Чанк 1 улучшен
[2025-09-28T00:31:55.509+0000] {content_transformation.py:769} INFO - 🤖 vLLM обработка чанка 5/5
[2025-09-28T00:31:55.509+0000] {content_transformation.py:852} INFO - vLLM API вызов (попытка 1)
[2025-09-28T00:32:18.725+0000] {content_transformation.py:872} INFO - ✅ vLLM API успешен
[2025-09-28T00:32:18.725+0000] {content_transformation.py:773} INFO - ✅ Чанк 5 улучшен
[2025-09-28T00:32:53.922+0000] {content_transformation.py:872} INFO - ✅ vLLM API успешен
[2025-09-28T00:32:53.922+0000] {content_transformation.py:773} INFO - ✅ Чанк 4 улучшен
[2025-09-28T00:32:53.922+0000] {content_transformation.py:520} INFO - 🔗 Объединение улучшенных чанков
[2025-09-28T00:32:53.923+0000] {content_transformation.py:913} INFO - 🔗 Объединение 5 улучшенных чанков
[2025-09-28T00:32:53.924+0000] {content_transformation.py:928} INFO - ✅ Чанки успешно объединены
[2025-09-28T00:32:53.926+0000] {content_transformation.py:532} INFO - ✅ vLLM улучшение успешно: качество 0.900
[2025-09-28T00:32:53.926+0000] {content_transformation.py:546} INFO - 🔧 Результат vLLM дополнен закрывающей тройной кавычкой
[2025-09-28T00:32:53.926+0000] {shared_utils.py:170} INFO - 📊 Метрики: {'dag_id': 'content_transformation', 'task_id': 'perform_vllm_enhancement', 'processing_time_seconds': 103.95571374893188, 'pages_processed': 0, 'file_size_mb': 0.0, 'success': True, 'timestamp': '2025-09-28T00:32:53.926528'}
[2025-09-28T00:32:53.926+0000] {python.py:201} INFO - Done. Returned value was: {'session_id': 'transform_1759019468', 'enhancement_attempted': True, 'enhanced_content': '# upload_1759019435_test_short\n\n## 命令列表\n\n| Command Name                                  | NetFn   | CMD   | Privilege   | 备注                                                                                     |\n|-----------------------------------------------|---------|-------|-------------|------------------------------------------------------------------------------------------|\n| chassis status                                |         |       | User        | 获取当前服务器 (Server) 状态                                                         |\n| chassis restart_cause                         |         |       | User        | 获取服务器 (Server) 系统上次重启原因                                               |\n| chassis selftest                              |         |       | User        | 获取服务器 (Server) 系统自检结果                                                   |\n| chassis policy always-on/previous/always-off  |         |       | operator    | 设置服务器 (Server) 系统电源 (Power Supply) 恢复策略为自动开机 / 恢复到断电前状态 / 保持关机状态 |\n| chassis bootdev {device}                      |         |       | operator    | 设置服务器 (Server) 的启动项                                                       |\n| power status                                  |         |       | User        | 获取服务器 (Server) 系统电源 (Power Supply) 当前状态                               |\n| power on/up                                   |         |       | operator    | 设置服务器 (Server) 开机                                                           |\n| power off/down                                |         |       | operator    | 设置服务器 (Server) 关机                                                           |\n| power reset                                   |         |       | operator    | 设置服务器 (Server) 重启                                                           |\n| mc info                                       |         |       | User        | 获取服务器 (Server) 管理系统各个模块信息                                           |\n| mc selftest                                   |         |       | User        | 获取服务器 (Server) 管理系统自检结果                                               |\n| mc reset cold                                 |         |       | Admin       | 设置服务器 (Server) 管理系统冷重启                                                 |\n| sdr                                           |         |       | User        | 获取服务器 (Server) 所有传感器的部分信息                                           |\n| sensor list                                   |         |       | User        | 获取服务器 (Server) 所有传感器的详细参数信息                                       |\n| sensor get {sensor-name}                      |         |       | User        | 获取服务器 (Server) 指定传感器的详细信息                                           |\n| sensor thresh {sensor-name}                   |         |       | Admin       | 设置服务器 (Server) 指定传感器的阈值                                               |\n| sel                                           |         |       | User        | 获取系统日志信息                                                                     |\n| sel elist                                     |         |       | User        | 获取系统详细日志记录                                                               |\n| fru                                           |         |       | User        | 获取现场可替换单元信息                                                             |\n| session info active                           |         |       | User        | 获取服务器 (Server) 管理系统当前活跃用户的会话信息                                 |\n| User list                                     |         |       | User        | 获取所有用户信息                                                                     |\n| User set name {User id} {Username}            |         |       | Admin       | 设置服务器 (Server) 管理系统新增用户名                                             |\n| User set password {User id} {password}        |         |       | Admin       | 设置服务器 (Server) 管理系统指定用户的密码                                         |\n| User test {User id} {16|20} {password}        |         |       | Admin       | 验证用户名密码的正确性                                                             |\n| User disable {User id}                        |         |       | Admin       | 关闭指定用户的服务器 (Server) 管理系统的访问权限                                   |\n| User enable {User id}                         |         |       | Admin       | 开启指定用户的服务器 (Server) 管理系统的访问权限                                   |\n| User priv {User id} {privilege level}         |         |       | Admin       | 设置指定用户的服务器 (Server) 管理系统访问权限                                     |\n\n系统自检结果** |\n|--------------|-----------------------------------------------------------------|\n\n### 权限级别\n\n| **权限级别** | **user** |\n|--------------|----------|\n\n### 命令示例\n\n```bash\nlenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus chassis selftest\nSelf Test Results : passed\n```\n\n---\n\n## chassis policy always-on/previous/always-off（设置服务器 (Server)系统电源 (Power Supply)恢复策略）\n\n### 命令描述\n\n| **命令描述** | **chassis policy 命令用来设置服务器 (Server)系统电源 (Power Supply)恢复策略。支持三种策略：** |\n|--------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| | 1. **always-on**：当服务器 (Server)电源 (Power Supply)接通后系统会自动启动 |\n| | 2. **previous**：当服务器 (Server)电源 (Power Supply)接通后系统恢复电源 (Power Supply)拔出前的状态 |\n| | 3. **always-off**：当服务器 (Server)电源 (Power Supply)接通后系统保持关机状态 |\n\n### 权限级别\n\n| **权限级别** | **operator** |\n|--------------|--------------|\n\n### 命令示例\n\n```bash\nlenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus chassis policy state <state>\n```\n\n#### 获取支持的策略列表\n\n```bash\nlenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus chassis policy state list\n```\n\n#### 设置电源恢复策略\n\n```bash\nlenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus chassis policy state <state>\n```\n\n## Command Example\n\n| Command Example                                                                                                      |\n|---------------------------------------------------------------------------------------------------------------------|\n| `-H [BMC_IP] -U USERID -P PASSW0RD -I`                                                                              |\n| `lenovo:~# ipmitool lanplus chassis policy state <state>: list : return supported policies`                          |\n\n## `chassis bootdev {device}` (设置服务器 (Server) 的启动项)\n\n| Command Description | `chassis bootdev` 命令用来设置服务器 (Server) 系统一次性启动选项 |\n|---------------------|---------------------------------------------------------------|\n| Privilege           | operator                                                    |\n\n## `sol activate` (激活 SOL 功能)\n\n| Command Description | `sol activate` 命令用来激活 SOL 功能。 |\n|---------------------|-----------------------------------------|\n| Privilege           | administrator                        |\n| Command Example     | `lenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus sol activate usesolkeepalive [SOL Session operational. Use ~? for help]` |\n\n    |\n\n### Request Data Format\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | User ID (Value range: `01h` to `05h`)                                          |\n| **2**    | Parameter: <br> `01h` - enable <br> `02h` - severity <br> `03h` - version <br> `04h` - mode <br> `05h` - community <br> `06h` - user <br> `07h` - user encrypt <br> `08h` - password <br> `09h` - pass encrypt <br> `0Ah` - destination IP <br> `0Bh` - port <br> `0Ch` - lan channel <br> `0Dh` - enter ID |\n\n### Response Data Format\n\n#### Parameter `01h` (Enable/Disable)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2**    | `00h` - disable <br> `01h` - enable                                            |\n\n#### Parameter `02h` (Severity)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2**    | `01h` - critical <br> `02h` - critical and warning <br> `03h` - all            |\n\n#### Parameter `03h` (Version)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2**    | `01h` - v1 <br> `02h` - v2c <br> `03h` - v3                                    |\n\n#### Parameter `04h` (Mode)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2**    | Mode value                                                                     |\n\n#### Parameter `05h` (Community)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2:17** | Community string                                                               |\n\n#### Parameter `06h` (User)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2:17** | User string                                                                    |\n\n#### Parameter `07h` (User Encrypt)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2**    | `00h` - user encrypt <br> `01h` - user non-encrypt                              |\n\n#### Parameter `08h` (Password)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2:17** | Password string                                                                |\n\n#### Parameter `09h` (Password Encrypt)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2**    | `00h` - password encrypt <br> `01h` - password non-encrypt                      |\n\n#### Parameter `0Ah` (Destination IP)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2:33** | Destination IP address                                                         |\n\n#### Parameter `0Bh` (Port)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2:3**  | Port number                                                                   |\n\n#### Parameter `0Ch` (LAN Channel)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2**    | LAN channel                                                                    |\n\n#### Parameter `0Dh` (Enter ID)\n\n| **Byte** | **Data Field**                                                                 |\n|----------|--------------------------------------------------------------------------------|\n| **1**    | Completion code                                                                |\n| **2:33** | Enter ID                                                                       |\n\n### Command Example\n\n```bash\n# ipmitool -H 10.109.107.160 -U USERID -P PASSW0RD\n```\n\n---------------------------------------------------------|------------------------------------------------------------------------|\n\n### SET SNMPTRAPINFO (netfn=`0x30`, cmd=`0x03`)\n\n| Byte | Data Field                                                                                                                                         |\n|------|----------------------------------------------------------------------------------------------------------------------------------------------------|\n| 1    | **User ID**: This value ranges from `01h` to `05h`.                                                                                               |\n| 2    | **Parameter** (Values for different parameters):<br>`01h` - Enable<br>`02h` - Severity<br>`03h` - Version<br>`04h` - Mode<br>`05h` - Community<br>`06h` - User<br>`07h` - User Encrypt<br>`08h` - Password<br>`09h` - Pass Encrypt<br>`0Ah` - Destination IP<br>`0Bh` - Port<br>`0Ch` - LAN Channel<br>`0Dh` - Enter ID |\n| 3    | **Below Value for Parameter `01h`**: <br>`00h` - Disable<br>`01h` - Enable<br><br>**Below Value for Parameter `02h`**: <br>`01h` - Critical<br>`02h` - Critical and Warning<br>`03h` - All<br><br>**Below Value for Parameter `03h`**: (To be continued) |\n```\n```\n', 'enhancement_quality': 0.9000000000000001, 'chunks_processed': 5, 'enhancement_time': 103.95570969581604, 'enhancement_successful': True}
[2025-09-28T00:32:53.949+0000] {taskinstance.py:1138} INFO - Marking task as SUCCESS. dag_id=content_transformation, task_id=perform_vllm_enhancement, execution_date=20250928T003107, start_date=20250928T003109, end_date=20250928T003253
[2025-09-28T00:32:54.004+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 0
[2025-09-28T00:32:54.025+0000] {taskinstance.py:3280} INFO - 1 downstream tasks scheduled from follow-on schedule check
